.verbFormsTable table {
  min-width: 100%;
  border-spacing: 0;
  --forms-dt-font-size: 0.875em;
  border-radius: 0.25em 0 0 0;
  background-image: radial-gradient(ellipse at bottom right, transparent 67%, hsla(53, 50%, 45%, 10%));
}

.verbFormsTable table tr th,
.verbFormsTable table tr td {
  padding: 0.125em 0.45em;
}

.verbFormsTable table tr th:first-child {
  min-width: 10ch;
}

/* For <col> elements, width is used instead of min-width (or indeed max-width).
It’s a suggestion of how wide the columns will be, not an absolute rule.
So it doesn’t matter that the widths don’t sum to 100% (as long as they’re less than 100%),
and it doesn’t matter much that the widths don’t account for differing amounts of text in each column. */
.verbFormsTable col {
  width: 10%;
}
/* These two columns are the two columns of header cells, which do not contain any verb forms. */
/* The selector would be simply .column-1,.column-2 but CSS Modules messes with the class-names. */
.verbFormsTable col[class*='column-1'] {
  width: 5%;
}
.verbFormsTable col[class*='column-2'] {
  width: 7.5%;
}
/* This is the <col> in the infinitives table, which only has one <col> specified. */
.verbFormsTable table:has([data-id*='infinitive']) col {
  width: 17.5%;
}

.verbFormsTable col[class*='participle-column'] {
  width: 14.25%;
}

.verbFormsTable table tr th:not(:empty) {
  font-style: italic;
  font-weight: bold;
  font-size: var(--forms-dt-font-size, 1em);
  color: #34311a;
  border: 1px solid transparent;
  /* This is #34311a with less opacity */
  border-top-color: hsla(53, 33%, 15%, 33.33%);
  border-left-color: hsla(53, 33%, 15%, 33.33%);
  border-radius: 0.25em 0 0 0;
}

/* Header cells for indicative, subjunctive, etc */
.verbFormsTable table thead tr:first-of-type th:first-of-type,
.verbFormsTable table thead th[class$='supine'] {
  font-size: calc(1.0625 * var(--forms-dt-font-size, 1em));
}

/* Highlight <th> cells when matching th/td are hovered.
Every <th> has a data-id attribute, which is unique within its <table>.
Every cell (<td> & <th>) has a data-headers attribute, which lists all the IDs of the cell’s header cells.
So every header cell should have a line of the selector below, in the format
table:has([data-headers*='ID']:hover) th[data-id='ID']
The selector *= means “contains”.
Slightly special handling needs to be on `future` to stop `futureperfect` matching it.
 */
.verbFormsTable table:has([data-headers*='singular']:hover) th[data-id='singular'],
.verbFormsTable table:has([data-headers*='first-singular']:hover) th[data-id='first-singular'],
.verbFormsTable table:has([data-headers*='second-singular']:hover) th[data-id='second-singular'],
.verbFormsTable table:has([data-headers*='third-singular']:hover) th[data-id='third-singular'],
.verbFormsTable table:has([data-headers*='plural']:hover) th[data-id='plural'],
.verbFormsTable table:has([data-headers*='first-plural']:hover) th[data-id='first-plural'],
.verbFormsTable table:has([data-headers*='second-plural']:hover) th[data-id='second-plural'],
.verbFormsTable table:has([data-headers*='third-plural']:hover) th[data-id='third-plural'],
.verbFormsTable table:has([data-headers*='indicative']:hover) th[data-id='indicative'],
.verbFormsTable table:has([data-headers*='subjunctive']:hover) th[data-id='subjunctive'],
.verbFormsTable table:has([data-headers*='imperative']:hover) th[data-id='imperative'],
.verbFormsTable table:has([data-headers*='infinitive']:hover) th[data-id='infinitive'],
.verbFormsTable table:has([data-headers*='gerund']:hover) th[data-id='gerund'],
.verbFormsTable table:has([data-headers*='supine']:hover) th[data-id='supine'],
.verbFormsTable table:has([data-headers*='active']:hover) th[data-id='active'],
.verbFormsTable table:has([data-headers*='active-present']:hover) th[data-id='active-present'],
.verbFormsTable table:has([data-headers*='active-imperfect']:hover) th[data-id='active-imperfect'],
.verbFormsTable
  table:has([data-headers*='active-future']:not([data-headers*='futureperfect']):hover)
  th[data-id='active-future'],
.verbFormsTable table:has([data-headers*='active-perfect']:hover) th[data-id='active-perfect'],
.verbFormsTable table:has([data-headers*='active-pluperfect']:hover) th[data-id='active-pluperfect'],
.verbFormsTable table:has([data-headers*='active-futureperfect']:hover) th[data-id='active-futureperfect'],
.verbFormsTable table:has([data-headers*='passive']:hover) th[data-id='passive'],
.verbFormsTable table:has([data-headers*='passive-present']:hover) th[data-id='passive-present'],
.verbFormsTable table:has([data-headers*='passive-imperfect']:hover) th[data-id='passive-imperfect'],
.verbFormsTable table:has([data-headers*='passive-future']:hover) th[data-id='passive-future'],
.verbFormsTable table:has([data-headers*='accusative-gerund']:hover) th[data-id='accusative-gerund'],
.verbFormsTable table:has([data-headers*='genitive-gerund']:hover) th[data-id='genitive-gerund'],
.verbFormsTable table:has([data-headers*='dative-gerund']:hover) th[data-id='dative-gerund'],
.verbFormsTable table:has([data-headers*='ablative-gerund']:hover) th[data-id='ablative-gerund'],
.verbFormsTable table:has([data-headers*='accusative-supine']:hover) th[data-id='accusative-supine'],
.verbFormsTable table:has([data-headers*='ablative-supine']:hover) th[data-id='ablative-supine'],
.verbFormsTable table:has([data-headers*='masculine']:hover) th[data-id='masculine'],
.verbFormsTable table:has([data-headers*='singular-masculine']:hover) th[data-id='singular-masculine'],
.verbFormsTable table:has([data-headers*='plural-masculine']:hover) th[data-id='plural-masculine'],
.verbFormsTable table:has([data-headers*='feminine']:hover) th[data-id='feminine'],
.verbFormsTable table:has([data-headers*='singular-feminine']:hover) th[data-id='singular-feminine'],
.verbFormsTable table:has([data-headers*='plural-feminine']:hover) th[data-id='plural-feminine'],
.verbFormsTable table:has([data-headers*='neuter']:hover) th[data-id='neuter'],
.verbFormsTable table:has([data-headers*='singular-neuter']:hover) th[data-id='singular-neuter'],
.verbFormsTable table:has([data-headers*='plural-neuter']:hover) th[data-id='plural-neuter'],
.verbFormsTable table:has([data-headers*='nominative']:hover) th[data-id='nominative'],
.verbFormsTable table:has([data-headers*='vocative']:hover) th[data-id='vocative'],
.verbFormsTable table:has([data-headers*='accusative']:hover) th[data-id='accusative'],
.verbFormsTable table:has([data-headers*='genitive']:hover) th[data-id='genitive'],
.verbFormsTable table:has([data-headers*='dative']:hover) th[data-id='dative'],
.verbFormsTable table:has([data-headers*='ablative']:hover) th[data-id='ablative'],
.verbFormsTable table:has([data-headers*='passive-perfect']:hover) th[data-id='passive-perfect'] {
  background-image: linear-gradient(to bottom right, #efe1ab, transparent);
  border-top-color: #34311a;
  border-left-color: #34311a;
  color: #34311a;
}

.verbFormsTable td {
  position: relative;
}

/* The dashes are similar to those used on FormsTable, but on the right & bottom sides and only shown on hover. */
/* Dashes down the right side of data-cells */
.verbFormsTable td:hover::before {
  content: '';
  position: absolute;
  right: 0;
  bottom: 0.125em;
  width: 1px;
  height: calc(100% - 0.4625em);
  background-image: repeating-linear-gradient(0deg, #34311a, #34311a 0.25em, transparent, transparent 0.6666em);
  opacity: 0.3333;
}

/* Dashes across the bottom side of data-cells */
.verbFormsTable td:hover::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: calc(100% - 0.4625em);
  height: 1px;
  background-image: repeating-linear-gradient(270deg, #34311a, #34311a 0.25em, transparent, transparent 0.6666em);
  opacity: 0.3333;
}

/* All participle tables should have the same width, the width of the widest table;
this is achieved by having the tables inherit the width from the wrapper div. */
.verbFormsTable div[class*='tablesWrapper'] {
  min-width: fit-content;
}
