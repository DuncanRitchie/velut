/* The JS-enabled CSS is adapted from https://www.w3.org/WAI/ARIA/apg/patterns/tabs/examples/tabs-automatic/ */
/* The JS-disabled implementation is my own. */

.jsDisabled [role='tablist'] {
  display: none;
}

.jsEnabled > ul {
  display: none;
}

.tabs [role='tablist'],
.tabs > ul {
  margin-top: 0.25rem;
  min-width: 100%;
}

.tabs [role='tab'],
.tabs > ul li a {
  position: relative;
  z-index: 0;
  margin: 0.25rem 0.25rem -0.1rem 0;
  padding: 0.5rem 0.625rem;
  border: 1px solid #58522c;
  border-radius: 0.3333rem 0.3333rem 0 0;
  background: #f0f4f5;
  background-image: radial-gradient(transparent 50%, #b7dde180 100%);
  overflow: hidden;
  text-align: left;
}

.tabs > ul li {
  display: inline-block;
  margin-top: 0.5rem;
  margin-bottom: 0.375rem;
}

.tabs [role='tab'][aria-selected='true'] {
  z-index: 2;
  margin-top: 0;
  border-top-width: 0.1875rem;
  border-bottom: 0;
  padding-bottom: calc(0.5rem + 0.5px);
  background: #fffdf4;
}

.tabs > ul li a:focus {
  background: #fffdf4;
}

.tabs [role='tab']:hover,
.tabs > ul li a:hover {
  background: #fffdf4;
  background-image: none;
}

.tabs [role='tabpanel'] {
  position: relative;
  z-index: 1;
  margin-top: 0;
  padding: 0.5rem;
  border: 1px solid #58522c;
  border-radius: 0 0.3333rem 0.3333rem;
  background: #fffdf4;
  overflow-x: auto;
  scroll-margin-top: 5rem;
}

.jsEnabled .tabPanelHidden[role='tabpanel'] {
  display: none;
}

/* If forms on a tab are not being shown in description lists,
they should align with the text in the first tab button.
Tab buttons have inline padding of 0.625rem and tab-panels have
0.5rem, therefore an extra inline padding of 0.125rem is needed.
Iâ€™m assuming every form is inside an element such as <a> or <span>. */
.tabs [role='tabpanel'] > :not(dl) {
  padding: 0 0.125rem;
}

/* The .tabPanelsWrapper and .tabPanelsContainer divs are only useful if JS is disabled. */

.jsDisabled .tabPanelsWrapper {
  width: 100%;
  padding-bottom: 1rem;
  overflow-x: auto;
  /* Redeclaring variable here because original declaration uses 100%, which needs 
  to be changed to 100vw here because % is relative to the current element. */
  --page-width: min(calc(100vw - 1.125rem), 46.875rem);
}

.jsDisabled .tabPanelsContainer {
  --tab-panel-width: calc(var(--page-width) - 3rem - 6px);
  width: calc(var(--tab-panel-width) * var(--tabs-count));
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: var(--tab-panel-width);
}
