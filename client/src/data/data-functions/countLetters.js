// const lemmata = require('../lemmata.json')
// const words = require('../words_8fields.json')

// countLettersArray(words) = [[ 'i', 79766 ],[ 'e', 77876 ],[ 'a', 67422 ],[ 'r', 56797 ], ... ]

const countLettersArray = (json) => {
    // Start with an empty object.
    let letterCounts = {}
    // Add keyâ€”value pairs to the object, such that each key is a letter and each value is its frequency in the NoMacra fields.
    for (let i = 0; i < json.length; i++) {
        let currentWordArray = json[i].NoMacra.toLowerCase().split("")
        for (let j = 0; j < currentWordArray.length; j++) {
            if (!letterCounts[currentWordArray[j]]) {
                letterCounts[currentWordArray[j]] = 1
            }
            else {
                letterCounts[currentWordArray[j]] ++
            }
        }
    }
    // Make the keys (letters) of the object into an array.
    let lettersArray = Object.getOwnPropertyNames(letterCounts)
    // The keys and their values will go into a new array.
    let letterCountsArray = []
    // For every letter, add an array containing it and its frequency to letterCountsArray.
    for (let i = 0; i < lettersArray.length; i++) {
        letterCountsArray[i] = [lettersArray[i],letterCounts[lettersArray[i]]]
    }
    // Sort the array in descending letter frequency.
    letterCountsArray.sort((a,b)=>{return b[1]-a[1]})
    // Return the array
    return letterCountsArray
}

// countLettersObject() uses the array generated by countLettersArray() to produce an object.
// Each key is a single letter; each value is its frequency in the json parameter.
// Because countLettersArray() sorts by frequency, countLettersObject() will also sort by frequency.
// countLettersObject(words) = { i: 79766,  e: 77876,  a: 67422,  r: 56797,  s: 56207,  t: 50333,  u: 43595,  n: 40309,  c: 36754,  o: 36288,  m: 31885,  l: 29075,  p: 23236,  d: 18192,  b: 12294,  g: 11006,  v: 8976,  f: 8730,  h: 6941,  x: 4084,  q: 2481,  y: 2372,  z: 318,  k: 19 }

const countLettersObject = (json) => {
    let letterCountsArray = countLettersArray(json)
    let letterCountsSorted = {}
    for (let i = 0; i < letterCountsArray.length; i++) {
        letterCountsSorted[letterCountsArray[i][0]] = letterCountsArray[i][1]
    }
    return letterCountsSorted
}

// getWeightedLetters(words) = {vowels: ["o","o","o","o","o","o","o","u","u","u","u", ... ],
//                              consonants: ["k","y","y","q","q","q","x","x","x","x", ... ]}
// I.e. it's an object with two keys, each referring to an array of letters.
// The least frequent letter appears once, the second least frequent twice, etc.
// This is the function that the Countdown page uses to generate random Countdown strings.

const getWeightedLetters = (json) => {
    let weightedVowels = []
    let weightedConsonants = []
    let letterCountsArray = countLettersArray(json).reverse()
    for (let i = 0; i < letterCountsArray.length; i++) {
        let currentLetter = letterCountsArray[i][0]
        for (let j = 0; j < i; j++) {
            if (currentLetter === "a" || currentLetter === "e" || currentLetter === "i" || currentLetter === "o" || currentLetter === "u") {
                weightedVowels.push(currentLetter)
            }
            else {
                weightedConsonants.push(currentLetter)
            }
        }
    }
    return {vowels: weightedVowels, consonants: weightedConsonants}
}

export default getWeightedLetters
export {countLettersObject}